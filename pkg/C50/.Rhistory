setwd("~/Documents/C5.0_implementation/C50-master/C50-master")
setwd("~/Documents/C5.0_implementation/C50-master/C50-master")
library(C50)
data(churn)
treeModel <- C5.0(x = churnTrain[, -20], y = churnTrain$churn)
treeModel
treeModel <- C5.0(x = churnTrain[, -20], y = churnTrain$churn,trials = 15)
treeModel
predict(treeModel, head(churnTest[, -20]))
library(C50)
library(C50)
setwd("~/Documents/C50_Pruned_3")
library(C50)
treeModel <- C5.0(x = churnTrain[, -20], y = churnTrain$churn,trials = 13)
treeModel <- C5.0(x = churnTrain[, -20], y = churnTrain$churn,trials = 15)
setwd("~/Documents/C50_Pruned_3")
library(C50)
treeModel <- C5.0(x = churnTrain[, -20], y = churnTrain$churn,trials = 15)
predict(treeModel, head(churnTest[, -20]))
treeModel <- C5.0(x = churnTrain[, -20], y = churnTrain$churn,trials = 15)
predict(treeModel, head(churnTest[, -20]))
treeModel <- C5.0(x = churnTrain[, -20], y = churnTrain$churn)
predict(treeModel, head(churnTest[, -20]))
treeModel <- C5.0(x = churnTrain[, -20], y = churnTrain$churn,trials=7)
predict(treeModel, head(churnTest[, -20]))
setwd("~/Documents/C50_Pruned_3/R")
library(C50)
data(churn)
treeModel <- C5.0(x = churnTrain[, -20], y = churnTrain$churn)
treeModel <- C5.0(x = churnTrain[, -20], y = churnTrain$churn,trials=7)
library(C50)
data(churn)
treeModel <- C5.0(x = churnTrain[, -20], y = churnTrain$churn,trials=7)
library(C50)
data(churn)
treeModel <- C5.0(x = churnTrain[, -20], y = churnTrain$churn,trials=7)
library(C50)
data(churn)
treeModel <- C5.0(x = churnTrain[, -20], y = churnTrain$churn,trials=7)
treeModel <- C5.0(x = churnTrain[, -20], y = churnTrain$churn,trials=10)
getwd()
setwd("~/Documents/new data sets")
library(C50)
train = read.csv("adult.csv")
index <- 1:nrow(train)
index <- sample(index) ### shuffle index
fold <- rep(1:10, each=nrow(train)/10)[1:nrow(train)]
folds <- split(index, fold) ### create list with indices for each fold
#' Do each fold
accs <- vector(mode="numeric")
#aucs <- vector(mode="numeric")
sizes <- vector(mode="numeric")
for(i in 1:length(folds)) {
#tree <- C5.0(Cover_Type ~., data=train[-folds[[i]],])
tree <- C5.0(class ~.,data = train[-folds[[i]],],trials = 100,prunem = 20)
sizes <- tree$size
# accs[i] <- accuracy(factor(predict(tree, train[folds[[1]],])),factor(train[folds[[1]],]$Cover_Type)))
a <- predict(tree, train[folds[[i]],])
b <- train[folds[[i]],]$class
accs[i] <- sum(a == b) /length(a)
#aucs[i] <- auc(roc(a,b))
}
library(C50)
library(C50)
library(dismo)
train = read.csv("balance_scale.csv")
folds <- kfold(train, k=10, by=train$class)
#' Do each fold
accs <- vector(mode="numeric")
sizes <- vector(mode="numeric")
for(i in 1:10) {
tree <- C5.0(factor(class) ~.,data = train[folds!=i,],trials = 100,prunem = 20)
sizes <- tree$size
a <- predict(tree, train[folds==i,])
b <- train[folds==i,]$class
accs[i] <- sum(a == b) /length(a)
print(i)
}
#' Report the average
mean(accs)
mean(sizes)
setwd("~/Documents/new data sets")
library(C50)
library(dismo)
train = read.csv("balance_scale.csv")
folds <- kfold(train, k=10, by=train$class)
#' Do each fold
accs <- vector(mode="numeric")
sizes <- vector(mode="numeric")
for(i in 1:10) {
tree <- C5.0(factor(class) ~.,data = train[folds!=i,],trials = 100,prunem = 20)
sizes <- tree$size
a <- predict(tree, train[folds==i,])
b <- train[folds==i,]$class
accs[i] <- sum(a == b) /length(a)
print(i)
}
#' Report the average
mean(accs)
mean(sizes)
library(C50)
library(dismo)
train = read.csv("balance_scale.csv")
folds <- kfold(train, k=10, by=train$class)
#' Do each fold
accs <- vector(mode="numeric")
sizes <- vector(mode="numeric")
for(i in 1:10) {
tree <- C5.0(factor(class) ~.,data = train[folds!=i,],trials = 100,prunem = 21)
sizes <- tree$size
a <- predict(tree, train[folds==i,])
b <- train[folds==i,]$class
accs[i] <- sum(a == b) /length(a)
print(i)
}
#' Report the average
mean(accs)
mean(sizes)
library(C50)
library(dismo)
train = read.csv("balance_scale.csv")
folds <- kfold(train, k=10, by=train$class)
#' Do each fold
accs <- vector(mode="numeric")
sizes <- vector(mode="numeric")
for(i in 1:10) {
tree <- C5.0(factor(class) ~.,data = train[folds!=i,],trials = 100,prunem = 23)
sizes <- tree$size
a <- predict(tree, train[folds==i,])
b <- train[folds==i,]$class
accs[i] <- sum(a == b) /length(a)
print(i)
}
#' Report the average
mean(accs)
mean(sizes)
library(C50)
library(dismo)
train = read.csv("balance_scale.csv")
folds <- kfold(train, k=10, by=train$class)
#' Do each fold
accs <- vector(mode="numeric")
sizes <- vector(mode="numeric")
for(i in 1:10) {
tree <- C5.0(factor(class) ~.,data = train[folds!=i,],trials = 100,prunem = 39)
sizes <- tree$size
a <- predict(tree, train[folds==i,])
b <- train[folds==i,]$class
accs[i] <- sum(a == b) /length(a)
print(i)
}
#' Report the average
mean(accs)
mean(sizes)
